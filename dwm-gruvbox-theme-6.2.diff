From 0e331bbc69b317a51c32e20a9734a83da4e4076f Mon Sep 17 00:00:00 2001
From: explosion-mental <explosion0mental@gmail.com>
Date: Mon, 21 Jun 2021 16:40:53 -0500
Subject: [PATCH] gruvbox-theme

Basically the bar from https://github.com/pangteypiyush/dwm without the
alternative look on the bar, without this
https://dwm.suckless.org/patches/alternativetags.

---
 config.def.h | 52 +++++++++++++++++++++++++++++++++++++++++++++++-----
 dwm.c        | 29 ++++++++++++++++++-----------
 2 files changed, 65 insertions(+), 16 deletions(-)

diff --git a/config.def.h b/config.def.h
index 1c0b587..a5d59b5 100644
--- a/config.def.h
+++ b/config.def.h
@@ -7,15 +7,57 @@ static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "monospace:size=10" };
 static const char dmenufont[]       = "monospace:size=10";
+//You may delete these colors
 static const char col_gray1[]       = "#222222";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
 static const char col_cyan[]        = "#005577";
-static const char *colors[][3]      = {
-	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+
+/* gruvbox */
+/* Note that if you refresh yours colors without recompiling (e.g. using
+pywal and the xrdb patch), you need to remove the "const" on the colors below
+*/
+
+static const char col_gb_bg[]        = "#282828";
+static const char col_gb_fg[]        = "#ebdbb2";
+
+static const char col_gb_red1[]     = "#cc241d";
+static const char col_gb_red2[]     = "#fb4934";
+
+static const char col_gb_green1[]   = "#98971a";
+static const char col_gb_green2[]   = "#b8bb26";
+
+static const char col_gb_yellow1[]  = "#d79921";
+static const char col_gb_yellow2[]  = "#fabd2f";
+
+static const char col_gb_blue1[]    = "#458588";
+static const char col_gb_blue2[]    = "#83a598";
+
+static const char col_gb_purple1[]  = "#b16286";
+static const char col_gb_purple2[]  = "#83869b";
+
+static const char col_gb_aqua1[]    = "#689d6a";
+static const char col_gb_aqua2[]    = "#8ec07c";
+
+static const char col_gb_gray1[]    = "#a89984";
+static const char col_gb_gray2[]    = "#928374";
+
+static const char col_gb_orange1[]  = "#d65d0e";
+static const char col_gb_orange2[]  = "#fe8019";
+/* gruvbox */
+
+static char *colors[][3] = {
+       /*               fg           bg           border	 */
+	[SchemeNorm]   = { col_gb_gray2,   col_gb_bg,      col_gb_bg }, /* normal tags color */
+	[SchemeSel]    = { col_gb_orange2, col_gb_bg,      col_gb_orange2 }, /* Selected tag color */
+	[SchemeLt]     = { col_gb_orange2, col_gb_bg,      col_gb_bg }, /* Layout space */
+	[SchemeTitle]  = { col_gb_fg,      col_gb_bg,      col_gb_bg }, /* window title */
+	[SchemeStatus] = { col_gb_aqua2,   col_gb_bg,      col_gb_bg }, /* status bar (e.g. dwm-6.2) */
+	[SchemeUrgent] = { col_gb_fg,      col_gb_bg,      col_gb_bg }, /* urgent tag */
+	[SchemeNotify] = { col_gb_red1,    col_gb_bg,      col_gb_bg }, /* rectabgle on urgent tag */
+	[SchemeIndOff] = { col_gb_green2,  col_gb_bg,      col_gb_bg }, /* rectangle on active tag */
+	[SchemeIndOn]  = { col_gb_blue2,   col_gb_bg,      col_gb_bg }, /* rectangle on norm tag */
 };

 /* tagging */
@@ -56,7 +98,7 @@ static const Layout layouts[] = {

 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gb_bg, "-nf", col_gray2, "-sb", col_gb_bg, "-sf", col_gb_orange2, NULL };
 static const char *termcmd[]  = { "st", NULL };

 static Key keys[] = {
diff --git a/dwm.c b/dwm.c
index 4465af1..57ea791 100644
--- a/dwm.c
+++ b/dwm.c
@@ -59,7 +59,7 @@

 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
-enum { SchemeNorm, SchemeSel }; /* color schemes */
+enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeLt, SchemeStatus, SchemeIndOff, SchemeIndOn, SchemeUrgent, SchemeNotify }; /* color schemes */
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
@@ -697,13 +697,13 @@ drawbar(Monitor *m)
 {
 	int x, w, sw = 0;
 	int boxs = drw->fonts->h / 9;
-	int boxw = drw->fonts->h / 6 + 2;
+	int boxw = drw->fonts->h / 9;
 	unsigned int i, occ = 0, urg = 0;
 	Client *c;

 	/* draw status first so it can be overdrawn by tags later */
 	if (m == selmon) { /* status is only drawn on selected monitor */
-		drw_setscheme(drw, scheme[SchemeNorm]);
+		drw_setscheme(drw, scheme[SchemeStatus]);
 		sw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
 		drw_text(drw, m->ww - sw, 0, sw, bh, 0, stext, 0);
 	}
@@ -716,21 +716,28 @@ drawbar(Monitor *m)
 	x = 0;
 	for (i = 0; i < LENGTH(tags); i++) {
 		w = TEXTW(tags[i]);
-		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
-		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
-		if (occ & 1 << i)
-			drw_rect(drw, x + boxs, boxs, boxw, boxw,
-				m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
-				urg & 1 << i);
+		if (urg & 1 << i )
+ 			drw_setscheme(drw, scheme[SchemeUrgent]);
+ 		else
+ 			drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
+ 		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], 0);
+ 		if (occ & 1 << i) {
+ 			if (urg & 1 << i ) {
+ 				drw_setscheme(drw, scheme[SchemeNotify]);
+                 		drw_rect(drw, x, 0, w, boxw, 1, 0);
+ 			}
+ 			drw_setscheme(drw, scheme[(m == selmon && selmon->sel && selmon->sel->tags & 1 << i) ? SchemeIndOn : SchemeIndOff]);
+ 			drw_rect(drw, x, bh - boxw, w, boxw, 1, 0);
+ 		}
 		x += w;
 	}
 	w = blw = TEXTW(m->ltsymbol);
-	drw_setscheme(drw, scheme[SchemeNorm]);
+	drw_setscheme(drw, scheme[SchemeLt]);
 	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);

 	if ((w = m->ww - sw - x) > bh) {
 		if (m->sel) {
-			drw_setscheme(drw, scheme[m == selmon ? SchemeSel : SchemeNorm]);
+ 			drw_setscheme(drw, scheme[m == selmon ? SchemeTitle : SchemeNorm]);
 			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
 			if (m->sel->isfloating)
 				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
--
2.32.0

